[{"/Users/jason/GitHub_file_management/React-Learn/first-app/src/index.js":"1","/Users/jason/GitHub_file_management/React-Learn/first-app/src/App.js":"2","/Users/jason/GitHub_file_management/React-Learn/first-app/src/components/Expenses/Expense.js":"3","/Users/jason/GitHub_file_management/React-Learn/first-app/src/components/Expenses/ExpenseItem.js":"4","/Users/jason/GitHub_file_management/React-Learn/first-app/src/components/UI/Card.js":"5","/Users/jason/GitHub_file_management/React-Learn/first-app/src/components/Expenses/ExpenseDate.js":"6","/Users/jason/GitHub_file_management/React-Learn/first-app/src/components/NewExpense/NewExpense.js":"7","/Users/jason/GitHub_file_management/React-Learn/first-app/src/components/NewExpense/ExpenseForm.js":"8","/Users/jason/GitHub_file_management/React-Learn/first-app/src/components/Expenses/ExpenseFilter.js":"9"},{"size":202,"mtime":1639489386487,"results":"10","hashOfConfig":"11"},{"size":1347,"mtime":1643805359363,"results":"12","hashOfConfig":"11"},{"size":1341,"mtime":1643941712843,"results":"13","hashOfConfig":"11"},{"size":1607,"mtime":1643805336259,"results":"14","hashOfConfig":"11"},{"size":511,"mtime":1639547320100,"results":"15","hashOfConfig":"11"},{"size":502,"mtime":1639547337473,"results":"16","hashOfConfig":"11"},{"size":589,"mtime":1643805340026,"results":"17","hashOfConfig":"11"},{"size":3057,"mtime":1642084217298,"results":"18","hashOfConfig":"11"},{"size":655,"mtime":1642341955153,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"3bks9b",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/jason/GitHub_file_management/React-Learn/first-app/src/index.js",[],["40","41"],"/Users/jason/GitHub_file_management/React-Learn/first-app/src/App.js",[],"/Users/jason/GitHub_file_management/React-Learn/first-app/src/components/Expenses/Expense.js",[],"/Users/jason/GitHub_file_management/React-Learn/first-app/src/components/Expenses/ExpenseItem.js",["42"],"// a component in React is just a Javascript function\nimport React, { useState } from 'react';\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\n\n// * props -> pass data between components (only from PARENT to CHILD component)\nconst ExpenseItem = (props) => {\n  \n  // useState() can't be called in a nested function\n  // always return an array, first value: the current state value, second value: function to update the value\n  // props.title will only be considered when the component runs for the first time\n  // React always returns the latest state\n  // const [title, setTitle] = useState(props.title);\n\n  // why instead of function ()? Because it will call too early and automatically when below jsx code runs\n  // const clickHandler = () => {\n  //   setTitle('update');\n    // 'update' shown but still print the previous value, since the setTitle() does not change the value right away\n    // console.log(title);\n  // }\n\n  return (\n    // toLocaleString() output date in human readable format\n    // className instead of class which used in normal JS\n    // <ExpenseDate></ExpenseDate> == <ExpenseDate/>  \n    \n    // Here, className becomes a key of props to pass css definition to Card componet\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date}/>  \n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n      {/* <button onClick={clickHandler}>Change Title</button> */ }\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","/Users/jason/GitHub_file_management/React-Learn/first-app/src/components/UI/Card.js",[],"/Users/jason/GitHub_file_management/React-Learn/first-app/src/components/Expenses/ExpenseDate.js",[],"/Users/jason/GitHub_file_management/React-Learn/first-app/src/components/NewExpense/NewExpense.js",[],"/Users/jason/GitHub_file_management/React-Learn/first-app/src/components/NewExpense/ExpenseForm.js",[],"/Users/jason/GitHub_file_management/React-Learn/first-app/src/components/Expenses/ExpenseFilter.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":17,"nodeType":"49","messageId":"50","endLine":2,"endColumn":25},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]